{"version":3,"sources":["CKEditor.es6"],"names":[],"mappings":"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","file":"CKEditor.js","sourcesContent":["// Imports\nimport {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  ViewChild,\n  Optional,\n  EventEmitter,\n  NgZone,\n  Provider,\n  forwardRef,\n  Renderer\n} from '@angular/core';\nimport {NgControl, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n// Control Value accessor provider\nconst CKEDITOR_CONTROL_VALUE_ACCESSOR = new Provider(\n  NG_VALUE_ACCESSOR,\n  {\n    useExisting: forwardRef(() => CKEditor),\n    multi: true\n  }\n);\n\n/**\n * CKEditor component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></ckeditor>\n */\n@Component({\n  selector: 'ckeditor',\n  providers: [CKEDITOR_CONTROL_VALUE_ACCESSOR],\n  template: `\n  <div class=\"ng2-ckeditor\">\n    <textarea #host *ngIf=\"!config || !config.inline\"></textarea>\n    <div contenteditable=\"true\" #hostInline *ngIf=\"config && config.inline\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  `,\n})\nexport class CKEditor {\n\n  @Input() config;\n  @Input() debounce;\n\n  @Output() change = new EventEmitter();\n  @ViewChild('host') host;\n  @ViewChild('hostInline') hostInline;\n\n  _value = '';\n  _inline = false;\n  _firstWriteValue = true;\n\n  instance;\n  debounceTimeout;\n  zone;\n\n  /**\n   * Constructor\n   */\n  constructor(elementRef:ElementRef, zone:NgZone){\n    this.zone = zone;\n  }\n\n  get value(): any { return this._value; };\n  @Input() set value(v) {\n    if (v !== this._value) {\n      this._value = v;\n      this._onChangeCallback(v);\n    }\n  }\n\n  /**\n   * On component destroy\n   */\n  ngOnDestroy(){\n    if (this.instance) {\n      this.instance.removeAllListeners();\n      this.instance.destroy();\n      this.instance = null;\n    }\n  }\n\n  /**\n   * On component view init\n   */\n  ngAfterViewInit(){\n    // Configuration\n    var config = this.config || {};\n\n    // Init ckeditor instance\n    this.ckeditorInit(config);\n  }\n\n  /**\n   * Value update process\n   */\n  updateValue(value, noEmit){\n    this.zone.run(() => {\n      this.value = value;\n\n      this.onChange(value);\n\n      if(!noEmit){\n        this._onTouchedCallback();\n        this.change.emit(value);\n      }\n    });\n  }\n\n  /**\n   * CKEditor init\n   */\n  ckeditorInit(config){\n    if (!CKEDITOR) {\n      console.error('Please include CKEditor in your page');\n      return;\n    }\n\n    // CKEditor replace textarea\n    if(!config.inline){\n      this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n\n      // Set initial value\n      this.instance.setData(this.value);\n\n    // CKEditor inline mode\n    }else{\n      this._inline = true;\n      this.instance = CKEDITOR.inline(this.hostInline.nativeElement, config);\n\n      // Get initial content\n      let value = this.hostInline.nativeElement.innerHTML;\n      this._firstWriteValue = true;\n\n      setTimeout(() => {\n        this.updateValue(value, true);\n      });\n    }\n\n    // CKEditor change event\n    this.instance.on('change', () => {\n      this._onTouchedCallback();\n      let value = this.instance.getData();\n\n      // Debounce update\n      if (this.debounce) {\n        if(this.debounceTimeout) clearTimeout(this.debounceTimeout);\n        this.debounceTimeout = setTimeout(() => {\n          this.updateValue(value);\n          this.debounceTimeout = null;\n        }, parseInt(this.debounce));\n\n      // Live update\n      }else{\n        this.updateValue(value);\n      }\n    });\n  }\n\n  /**\n   * Implements ControlValueAccessor\n   */\n  writeValue(value){\n    if(this._inline && this._firstWriteValue){\n      this._firstWriteValue = false;\n      return;\n    }\n\n    this._value = value;\n    if (this.instance)\n      this.instance.setData(value);\n  }\n  onChange(_){}\n  onTouched(){}\n  registerOnChange(fn){this.onChange = fn;}\n  registerOnTouched(fn){this.onTouched = fn;}\n  _onChangeCallback(_){}\n  _onTouchedCallback(){}\n}\n"]}